" Setting leader keys
let mapleader = " "
let maplocalleader = " "

" Setting options
set hlsearch
set number
set mouse=a
set clipboard=unnamedplus
set breakindent
set undofile
set ignorecase
set smartcase
set signcolumn=yes
set updatetime=250
set timeout
set timeoutlen=800
set completeopt=menuone,noselect
set termguicolors
set surround
set visualbell
set relativenumber
set incsearch
set hlsearch
set highlightedyank
set nerdtree
set ideajoin
set idearefactormode=keep
" set which-key

" Basic Keymaps
nnoremap <Space> <Nop>
vnoremap <Space> <Nop>
nnoremap k gk
nnoremap j gj
nnoremap <C-d> <C-d>zz
nnoremap <C-u> <C-u>zz

"This is for deleting without yanking
nnoremap <leader>d "_d

" Reload .ideavimrc
nnoremap <leader>rc :action IdeaVim.ReloadVimRc.reload<CR>

" Distraction free mode
nnoremap <c-z> :action ToggleDistractionFreeMode<CR>
" Popup navigation
inoremap <C-j> <Action>(PopupMenu-selectNext)
inoremap <C-k> <Action>(PopupMenu-selectPrev)

" File navigation
map <leader>ff <action>(GotoFile)
map <leader>fr <action>(RecentFiles)
map <leader>fp <action>(FindInPath)
map <leader>fa :action GotoAction<CR>
map <leader><leader> <Action>(RecentFiles)
map <leader>fl <action>(RecentLocations)
map <leader>fs <action>(NewScratchFile)


" Actions
map <leader>am <action>(ShowIntentionActions)
map <leader><enter> <action>(SearchEverywhere)

" Close active tab
nnoremap <C-q> :bd<CR>
" map <leader>q <action>(CloseActiveEditor)

" Go to code
nnoremap gC :action GotoClass<CR>
nmap gd <Action>(GotoDeclaration)
nmap gy <Action>(GotoTypeDeclaration)
nmap gi <Action>(ReSharperGotoImplementation)
nmap gu <Action>(ShowUsages)
nmap gt <Action>(GotoTest)
nmap g, <Action>(Back)
nmap g. <Action>(Forward)
nnoremap gh :action LocalHistory.ShowHistory<CR>
nmap <leader>, <Action>(Back)
nmap <leader>. <Action>(Forward)
vnoremap < <gv
vnoremap > >gv
nnoremap [[ :action MethodUp<CR>
nnoremap ]] :action MethodDown<CR>

"Folding
nnoremap zc :action CollapseRegion<CR>
nnoremap zo :action ExpandRegion<CR>
nnoremap <leader>zc :action CollapseAllRegions<CR>
nnoremap <leader>zo :action ExpandAllRegions<CR>

" Refactoring
map <leader>rn <Action>(RenameElement)
map <leader>rm <Action>(ExtractMethod)
map <leader>rv <Action>(IntroduceVariable)
map <leader>rf <Action>(IntroduceField)
map <leader>rs <Action>(ChangeSignature)
map <leader>rr <Action>(Refactorings.QuickListPopupAction)
nnoremap <Leader>r=  :action ReformatCode<CR>
nnoremap <leader>ri :action OptimizeImports<CR>

"Misc
map <C-Space> :action CodeCompletion<CR>
map <leader>rf :action ReformatCode<CR>
map gc <action>(CommentByLineComment)
map gb <action>(CommentByBlockComment)
nmap <leader>ww :action SaveAll<CR>

" Git windows
"map <leader>gc <Action>(CheckinProject)
map <leader>gw <Action>(ActivateVersionControlToolWindow)
map <leader>gb <Action>(Git.Branches)
map <leader>gU <Action>(UpdateProject)

" Errors
map <leader>e. <Action>(ReSharperGotoNextErrorInSolution)
map <leader>e, <Action>(ReSharperGotoPrevErrorInSolution)

"Switching split windows
nmap <C-,> :tabprevious<CR>
nmap <C-.> :tabnext<CR>
nmap <C-h> <C-w>h
nmap <C-j> <C-w>j
nmap <C-k> <C-w>k
nmap <C-l> <C-w>l

" Tool Windows
map <leader>vc <Action>(ActivateCommitToolWindow)
map <leader>vd <Action>(ActivateDebugToolWindow)
map <leader>vD <Action>(ActivateDatabaseToolWindow)
map <leader>vp <Action>(ActivateProblemsViewToolWindow)
map <leader>vr <Action>(ActivateRunToolWindow)
" map <leader>vS <Action>(ActivateServicesToolWindow )
map <leader>vs <Action>(ActivateStructureToolWindow)
nnoremap <c-t> :action ActivateTerminalToolWindow<CR>
map <leader>vt <Action>(ActivateTerminalToolWindow)
map <leader>vT <Action>(ActivateTODOToolWindow)
map <leader>vv <Action>(ActivateVersionControlToolWindow)
map <leader>vE <Action>(ActivateEndpointsToolWindow)
"map <leader>vP <Action>(ActivatePullRequestToolWindow)
"map <leader>vn <Action>(ActivateNugetToolWindow)
map <leader>vu <Action>(ActivateUnitTestsToolWindow)
" Open NERDTree (use q to exit)
map <leader>ve :NERDTreeToggle<CR>

"run/Debug
nnoremap <leader>ar :action ChooseRunConfiguration<CR>
nnoremap <leader>ad :action Debug<CR>
nnoremap <leader>aa :action Rerun<CR>
nnoremap <leader>as :action Stop<CR>
